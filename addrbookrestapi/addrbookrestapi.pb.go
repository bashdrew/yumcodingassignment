// Code generated by protoc-gen-go. DO NOT EDIT.
// source: addrbookrestapi.proto

/*
Package addrbookrestapi is a generated protocol buffer package.

It is generated from these files:
	addrbookrestapi.proto

It has these top-level messages:
	PersonRequest
	PersonReply
	PeopleReply
*/
package addrbookrestapi

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The request message containing the user's id.
type PersonRequest struct {
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *PersonRequest) Reset()                    { *m = PersonRequest{} }
func (m *PersonRequest) String() string            { return proto.CompactTextString(m) }
func (*PersonRequest) ProtoMessage()               {}
func (*PersonRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *PersonRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

// The request message containing the user's id.
type PersonReply struct {
	Id        int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Firstname string `protobuf:"bytes,2,opt,name=firstname" json:"firstname,omitempty"`
	Lastname  string `protobuf:"bytes,3,opt,name=lastname" json:"lastname,omitempty"`
	Email     string `protobuf:"bytes,4,opt,name=email" json:"email,omitempty"`
	Phoneno   string `protobuf:"bytes,5,opt,name=phoneno" json:"phoneno,omitempty"`
}

func (m *PersonReply) Reset()                    { *m = PersonReply{} }
func (m *PersonReply) String() string            { return proto.CompactTextString(m) }
func (*PersonReply) ProtoMessage()               {}
func (*PersonReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *PersonReply) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *PersonReply) GetFirstname() string {
	if m != nil {
		return m.Firstname
	}
	return ""
}

func (m *PersonReply) GetLastname() string {
	if m != nil {
		return m.Lastname
	}
	return ""
}

func (m *PersonReply) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *PersonReply) GetPhoneno() string {
	if m != nil {
		return m.Phoneno
	}
	return ""
}

// The response message containing the list of persons
type PeopleReply struct {
	People []*PersonReply `protobuf:"bytes,1,rep,name=people" json:"people,omitempty"`
}

func (m *PeopleReply) Reset()                    { *m = PeopleReply{} }
func (m *PeopleReply) String() string            { return proto.CompactTextString(m) }
func (*PeopleReply) ProtoMessage()               {}
func (*PeopleReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *PeopleReply) GetPeople() []*PersonReply {
	if m != nil {
		return m.People
	}
	return nil
}

func init() {
	proto.RegisterType((*PersonRequest)(nil), "addrbookrestapi.PersonRequest")
	proto.RegisterType((*PersonReply)(nil), "addrbookrestapi.PersonReply")
	proto.RegisterType((*PeopleReply)(nil), "addrbookrestapi.PeopleReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for AddrBookRestAPI service

type AddrBookRestAPIClient interface {
	// Gets people details
	GetPeople(ctx context.Context, in *PersonRequest, opts ...grpc.CallOption) (*PeopleReply, error)
	// Gets a person details
	GetPerson(ctx context.Context, in *PersonRequest, opts ...grpc.CallOption) (*PersonReply, error)
	// Creates a person details
	PostPeople(ctx context.Context, in *PeopleReply, opts ...grpc.CallOption) (*PeopleReply, error)
	// Updates a person details
	PostPerson(ctx context.Context, in *PersonReply, opts ...grpc.CallOption) (*PersonReply, error)
	// Updates a person details
	PutPerson(ctx context.Context, in *PersonReply, opts ...grpc.CallOption) (*PersonReply, error)
	// Deletes a person details
	DeletePerson(ctx context.Context, in *PersonRequest, opts ...grpc.CallOption) (*PersonReply, error)
}

type addrBookRestAPIClient struct {
	cc *grpc.ClientConn
}

func NewAddrBookRestAPIClient(cc *grpc.ClientConn) AddrBookRestAPIClient {
	return &addrBookRestAPIClient{cc}
}

func (c *addrBookRestAPIClient) GetPeople(ctx context.Context, in *PersonRequest, opts ...grpc.CallOption) (*PeopleReply, error) {
	out := new(PeopleReply)
	err := grpc.Invoke(ctx, "/addrbookrestapi.AddrBookRestAPI/GetPeople", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *addrBookRestAPIClient) GetPerson(ctx context.Context, in *PersonRequest, opts ...grpc.CallOption) (*PersonReply, error) {
	out := new(PersonReply)
	err := grpc.Invoke(ctx, "/addrbookrestapi.AddrBookRestAPI/GetPerson", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *addrBookRestAPIClient) PostPeople(ctx context.Context, in *PeopleReply, opts ...grpc.CallOption) (*PeopleReply, error) {
	out := new(PeopleReply)
	err := grpc.Invoke(ctx, "/addrbookrestapi.AddrBookRestAPI/PostPeople", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *addrBookRestAPIClient) PostPerson(ctx context.Context, in *PersonReply, opts ...grpc.CallOption) (*PersonReply, error) {
	out := new(PersonReply)
	err := grpc.Invoke(ctx, "/addrbookrestapi.AddrBookRestAPI/PostPerson", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *addrBookRestAPIClient) PutPerson(ctx context.Context, in *PersonReply, opts ...grpc.CallOption) (*PersonReply, error) {
	out := new(PersonReply)
	err := grpc.Invoke(ctx, "/addrbookrestapi.AddrBookRestAPI/PutPerson", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *addrBookRestAPIClient) DeletePerson(ctx context.Context, in *PersonRequest, opts ...grpc.CallOption) (*PersonReply, error) {
	out := new(PersonReply)
	err := grpc.Invoke(ctx, "/addrbookrestapi.AddrBookRestAPI/DeletePerson", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for AddrBookRestAPI service

type AddrBookRestAPIServer interface {
	// Gets people details
	GetPeople(context.Context, *PersonRequest) (*PeopleReply, error)
	// Gets a person details
	GetPerson(context.Context, *PersonRequest) (*PersonReply, error)
	// Creates a person details
	PostPeople(context.Context, *PeopleReply) (*PeopleReply, error)
	// Updates a person details
	PostPerson(context.Context, *PersonReply) (*PersonReply, error)
	// Updates a person details
	PutPerson(context.Context, *PersonReply) (*PersonReply, error)
	// Deletes a person details
	DeletePerson(context.Context, *PersonRequest) (*PersonReply, error)
}

func RegisterAddrBookRestAPIServer(s *grpc.Server, srv AddrBookRestAPIServer) {
	s.RegisterService(&_AddrBookRestAPI_serviceDesc, srv)
}

func _AddrBookRestAPI_GetPeople_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PersonRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddrBookRestAPIServer).GetPeople(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/addrbookrestapi.AddrBookRestAPI/GetPeople",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddrBookRestAPIServer).GetPeople(ctx, req.(*PersonRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AddrBookRestAPI_GetPerson_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PersonRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddrBookRestAPIServer).GetPerson(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/addrbookrestapi.AddrBookRestAPI/GetPerson",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddrBookRestAPIServer).GetPerson(ctx, req.(*PersonRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AddrBookRestAPI_PostPeople_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PeopleReply)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddrBookRestAPIServer).PostPeople(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/addrbookrestapi.AddrBookRestAPI/PostPeople",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddrBookRestAPIServer).PostPeople(ctx, req.(*PeopleReply))
	}
	return interceptor(ctx, in, info, handler)
}

func _AddrBookRestAPI_PostPerson_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PersonReply)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddrBookRestAPIServer).PostPerson(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/addrbookrestapi.AddrBookRestAPI/PostPerson",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddrBookRestAPIServer).PostPerson(ctx, req.(*PersonReply))
	}
	return interceptor(ctx, in, info, handler)
}

func _AddrBookRestAPI_PutPerson_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PersonReply)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddrBookRestAPIServer).PutPerson(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/addrbookrestapi.AddrBookRestAPI/PutPerson",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddrBookRestAPIServer).PutPerson(ctx, req.(*PersonReply))
	}
	return interceptor(ctx, in, info, handler)
}

func _AddrBookRestAPI_DeletePerson_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PersonRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddrBookRestAPIServer).DeletePerson(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/addrbookrestapi.AddrBookRestAPI/DeletePerson",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddrBookRestAPIServer).DeletePerson(ctx, req.(*PersonRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AddrBookRestAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "addrbookrestapi.AddrBookRestAPI",
	HandlerType: (*AddrBookRestAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetPeople",
			Handler:    _AddrBookRestAPI_GetPeople_Handler,
		},
		{
			MethodName: "GetPerson",
			Handler:    _AddrBookRestAPI_GetPerson_Handler,
		},
		{
			MethodName: "PostPeople",
			Handler:    _AddrBookRestAPI_PostPeople_Handler,
		},
		{
			MethodName: "PostPerson",
			Handler:    _AddrBookRestAPI_PostPerson_Handler,
		},
		{
			MethodName: "PutPerson",
			Handler:    _AddrBookRestAPI_PutPerson_Handler,
		},
		{
			MethodName: "DeletePerson",
			Handler:    _AddrBookRestAPI_DeletePerson_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "addrbookrestapi.proto",
}

func init() { proto.RegisterFile("addrbookrestapi.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 313 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xac, 0x93, 0xd1, 0x4e, 0xf2, 0x40,
	0x10, 0x85, 0x29, 0xfd, 0xe1, 0xb7, 0x83, 0x4a, 0xb2, 0xc1, 0xb8, 0x21, 0x44, 0x49, 0xaf, 0xb8,
	0x22, 0x11, 0x7d, 0x01, 0xd0, 0xc4, 0xa0, 0x89, 0xd9, 0xf4, 0x0d, 0x8a, 0x3b, 0xea, 0x86, 0xd2,
	0x59, 0x77, 0x97, 0x0b, 0x9f, 0xc0, 0xb7, 0xf4, 0x59, 0x0c, 0x0b, 0xad, 0xa6, 0x51, 0x48, 0x0c,
	0x97, 0x67, 0xce, 0xf4, 0xcc, 0xd7, 0xd9, 0x0c, 0x9c, 0xa4, 0x52, 0x9a, 0x19, 0xd1, 0xdc, 0xa0,
	0x75, 0xa9, 0x56, 0x43, 0x6d, 0xc8, 0x11, 0x6b, 0x57, 0xca, 0xf1, 0x39, 0x1c, 0x09, 0x34, 0x96,
	0xf2, 0x04, 0x5f, 0x97, 0x68, 0x1d, 0x3b, 0x86, 0xba, 0x92, 0x3c, 0xe8, 0x07, 0x83, 0x30, 0xa9,
	0x2b, 0x19, 0xbf, 0x07, 0xd0, 0x2a, 0x3a, 0x74, 0xf6, 0x56, 0xf5, 0x59, 0x0f, 0xa2, 0x27, 0x65,
	0xac, 0xcb, 0xd3, 0x05, 0xf2, 0x7a, 0x3f, 0x18, 0x44, 0xc9, 0x57, 0x81, 0x75, 0xe1, 0x20, 0x4b,
	0x37, 0x66, 0xe8, 0xcd, 0x52, 0xb3, 0x0e, 0x34, 0x70, 0x91, 0xaa, 0x8c, 0xff, 0xf3, 0xc6, 0x5a,
	0x30, 0x0e, 0xff, 0xf5, 0x0b, 0xe5, 0x98, 0x13, 0x6f, 0xf8, 0x7a, 0x21, 0xe3, 0xeb, 0x15, 0x08,
	0xe9, 0x0c, 0xd7, 0x20, 0x57, 0xd0, 0xd4, 0x5e, 0xf2, 0xa0, 0x1f, 0x0e, 0x5a, 0xa3, 0xde, 0xb0,
	0xfa, 0xcb, 0xdf, 0xb0, 0x93, 0x4d, 0xef, 0xe8, 0x23, 0x84, 0xf6, 0x58, 0x4a, 0x33, 0x21, 0x9a,
	0x27, 0x68, 0xdd, 0x58, 0x4c, 0xd9, 0x3d, 0x44, 0xb7, 0xe8, 0xd6, 0xd9, 0xec, 0xec, 0xd7, 0x18,
	0xbf, 0x9f, 0xee, 0x4f, 0x63, 0x4a, 0xa8, 0xb8, 0x56, 0x86, 0xad, 0xbe, 0xf9, 0x53, 0x58, 0xc9,
	0x1c, 0xd7, 0xd8, 0x1d, 0x80, 0x20, 0x5b, 0xa0, 0x6d, 0x1d, 0xbd, 0x13, 0xac, 0xcc, 0xf2, 0x64,
	0x5b, 0x27, 0xef, 0xe4, 0x9a, 0x42, 0x24, 0x96, 0xfb, 0x89, 0x7a, 0x80, 0xc3, 0x1b, 0xcc, 0xd0,
	0xe1, 0x7e, 0x56, 0x36, 0xb9, 0x80, 0x53, 0x45, 0xc3, 0x67, 0xa3, 0x1f, 0xab, 0x8d, 0x93, 0x4e,
	0xe5, 0xe1, 0xc5, 0xea, 0x24, 0x44, 0x30, 0x6b, 0xfa, 0xdb, 0xb8, 0xfc, 0x0c, 0x00, 0x00, 0xff,
	0xff, 0xc5, 0x81, 0x11, 0x6e, 0x34, 0x03, 0x00, 0x00,
}
