// Code generated by protoc-gen-go. DO NOT EDIT.
// source: addrbookdb.proto

/*
Package addrbookdb is a generated protocol buffer package.

It is generated from these files:
	addrbookdb.proto

It has these top-level messages:
	PersonRequestDB
	PersonReplyDB
	PeopleReplyDB
*/
package addrbookdb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The request message containing the user's id.
type PersonRequestDB struct {
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *PersonRequestDB) Reset()                    { *m = PersonRequestDB{} }
func (m *PersonRequestDB) String() string            { return proto.CompactTextString(m) }
func (*PersonRequestDB) ProtoMessage()               {}
func (*PersonRequestDB) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *PersonRequestDB) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

// The request message containing the user's id.
type PersonReplyDB struct {
	Id        int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Firstname string `protobuf:"bytes,2,opt,name=firstname" json:"firstname,omitempty"`
	Lastname  string `protobuf:"bytes,3,opt,name=lastname" json:"lastname,omitempty"`
	Email     string `protobuf:"bytes,4,opt,name=email" json:"email,omitempty"`
	Phoneno   string `protobuf:"bytes,5,opt,name=phoneno" json:"phoneno,omitempty"`
}

func (m *PersonReplyDB) Reset()                    { *m = PersonReplyDB{} }
func (m *PersonReplyDB) String() string            { return proto.CompactTextString(m) }
func (*PersonReplyDB) ProtoMessage()               {}
func (*PersonReplyDB) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *PersonReplyDB) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *PersonReplyDB) GetFirstname() string {
	if m != nil {
		return m.Firstname
	}
	return ""
}

func (m *PersonReplyDB) GetLastname() string {
	if m != nil {
		return m.Lastname
	}
	return ""
}

func (m *PersonReplyDB) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *PersonReplyDB) GetPhoneno() string {
	if m != nil {
		return m.Phoneno
	}
	return ""
}

// The response message containing the list of persons
type PeopleReplyDB struct {
	People []*PersonReplyDB `protobuf:"bytes,1,rep,name=people" json:"people,omitempty"`
}

func (m *PeopleReplyDB) Reset()                    { *m = PeopleReplyDB{} }
func (m *PeopleReplyDB) String() string            { return proto.CompactTextString(m) }
func (*PeopleReplyDB) ProtoMessage()               {}
func (*PeopleReplyDB) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *PeopleReplyDB) GetPeople() []*PersonReplyDB {
	if m != nil {
		return m.People
	}
	return nil
}

func init() {
	proto.RegisterType((*PersonRequestDB)(nil), "addrbookdb.PersonRequestDB")
	proto.RegisterType((*PersonReplyDB)(nil), "addrbookdb.PersonReplyDB")
	proto.RegisterType((*PeopleReplyDB)(nil), "addrbookdb.PeopleReplyDB")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for AddrBookDB service

type AddrBookDBClient interface {
	// Gets a person details
	ReadPersonDB(ctx context.Context, in *PersonRequestDB, opts ...grpc.CallOption) (*PersonReplyDB, error)
	// Creats a person details
	CreatePersonDB(ctx context.Context, in *PersonReplyDB, opts ...grpc.CallOption) (*PersonReplyDB, error)
	// Update a person details
	UpdatePersonDB(ctx context.Context, in *PersonReplyDB, opts ...grpc.CallOption) (*PersonReplyDB, error)
}

type addrBookDBClient struct {
	cc *grpc.ClientConn
}

func NewAddrBookDBClient(cc *grpc.ClientConn) AddrBookDBClient {
	return &addrBookDBClient{cc}
}

func (c *addrBookDBClient) ReadPersonDB(ctx context.Context, in *PersonRequestDB, opts ...grpc.CallOption) (*PersonReplyDB, error) {
	out := new(PersonReplyDB)
	err := grpc.Invoke(ctx, "/addrbookdb.AddrBookDB/ReadPersonDB", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *addrBookDBClient) CreatePersonDB(ctx context.Context, in *PersonReplyDB, opts ...grpc.CallOption) (*PersonReplyDB, error) {
	out := new(PersonReplyDB)
	err := grpc.Invoke(ctx, "/addrbookdb.AddrBookDB/CreatePersonDB", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *addrBookDBClient) UpdatePersonDB(ctx context.Context, in *PersonReplyDB, opts ...grpc.CallOption) (*PersonReplyDB, error) {
	out := new(PersonReplyDB)
	err := grpc.Invoke(ctx, "/addrbookdb.AddrBookDB/UpdatePersonDB", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for AddrBookDB service

type AddrBookDBServer interface {
	// Gets a person details
	ReadPersonDB(context.Context, *PersonRequestDB) (*PersonReplyDB, error)
	// Creats a person details
	CreatePersonDB(context.Context, *PersonReplyDB) (*PersonReplyDB, error)
	// Update a person details
	UpdatePersonDB(context.Context, *PersonReplyDB) (*PersonReplyDB, error)
}

func RegisterAddrBookDBServer(s *grpc.Server, srv AddrBookDBServer) {
	s.RegisterService(&_AddrBookDB_serviceDesc, srv)
}

func _AddrBookDB_ReadPersonDB_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PersonRequestDB)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddrBookDBServer).ReadPersonDB(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/addrbookdb.AddrBookDB/ReadPersonDB",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddrBookDBServer).ReadPersonDB(ctx, req.(*PersonRequestDB))
	}
	return interceptor(ctx, in, info, handler)
}

func _AddrBookDB_CreatePersonDB_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PersonReplyDB)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddrBookDBServer).CreatePersonDB(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/addrbookdb.AddrBookDB/CreatePersonDB",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddrBookDBServer).CreatePersonDB(ctx, req.(*PersonReplyDB))
	}
	return interceptor(ctx, in, info, handler)
}

func _AddrBookDB_UpdatePersonDB_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PersonReplyDB)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddrBookDBServer).UpdatePersonDB(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/addrbookdb.AddrBookDB/UpdatePersonDB",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddrBookDBServer).UpdatePersonDB(ctx, req.(*PersonReplyDB))
	}
	return interceptor(ctx, in, info, handler)
}

var _AddrBookDB_serviceDesc = grpc.ServiceDesc{
	ServiceName: "addrbookdb.AddrBookDB",
	HandlerType: (*AddrBookDBServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ReadPersonDB",
			Handler:    _AddrBookDB_ReadPersonDB_Handler,
		},
		{
			MethodName: "CreatePersonDB",
			Handler:    _AddrBookDB_CreatePersonDB_Handler,
		},
		{
			MethodName: "UpdatePersonDB",
			Handler:    _AddrBookDB_UpdatePersonDB_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "addrbookdb.proto",
}

func init() { proto.RegisterFile("addrbookdb.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 276 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x92, 0x41, 0x4e, 0xc3, 0x30,
	0x14, 0x44, 0x71, 0x42, 0x0b, 0xfd, 0x40, 0x8b, 0x2c, 0x16, 0xa6, 0xb0, 0x08, 0xd9, 0x90, 0x55,
	0x24, 0xca, 0x09, 0x30, 0x59, 0x74, 0x19, 0x45, 0xe2, 0x00, 0x0e, 0xfe, 0x40, 0xd4, 0x34, 0xdf,
	0x38, 0x61, 0xc1, 0x11, 0xb8, 0x2a, 0xa7, 0x40, 0x75, 0x93, 0xa6, 0x08, 0x2a, 0x36, 0x2c, 0x67,
	0xe6, 0x69, 0x34, 0xb6, 0x3e, 0x9c, 0x2a, 0xad, 0x6d, 0x4e, 0xb4, 0xd0, 0x79, 0x6c, 0x2c, 0x35,
	0xc4, 0xa1, 0x77, 0xc2, 0x2b, 0x98, 0xa4, 0x68, 0x6b, 0xaa, 0x32, 0x7c, 0x7d, 0xc3, 0xba, 0x49,
	0x24, 0x1f, 0x83, 0x57, 0x68, 0xc1, 0x02, 0x16, 0xf9, 0x99, 0x57, 0xe8, 0xf0, 0x83, 0xc1, 0x49,
	0xc7, 0x98, 0xf2, 0xfd, 0x27, 0xc1, 0x2f, 0x61, 0xf4, 0x54, 0xd8, 0xba, 0xa9, 0xd4, 0x12, 0x85,
	0x17, 0xb0, 0x68, 0x94, 0xf5, 0x06, 0x9f, 0xc2, 0x61, 0xa9, 0xda, 0xd0, 0x77, 0xe1, 0x46, 0xf3,
	0x33, 0x18, 0xe0, 0x52, 0x15, 0xa5, 0xd8, 0x77, 0xc1, 0x5a, 0x70, 0x01, 0x07, 0xe6, 0x85, 0x2a,
	0xac, 0x48, 0x0c, 0x9c, 0xdf, 0xc9, 0x50, 0xae, 0xa6, 0x90, 0x29, 0xb1, 0x9b, 0x72, 0x03, 0x43,
	0xe3, 0x0c, 0xc1, 0x02, 0x3f, 0x3a, 0x9a, 0x9d, 0xc7, 0x5b, 0xcf, 0xfd, 0xb6, 0x3a, 0x6b, 0xc1,
	0xd9, 0x27, 0x03, 0xb8, 0xd3, 0xda, 0x4a, 0xa2, 0x45, 0x22, 0xf9, 0x1c, 0x8e, 0x33, 0x54, 0x7a,
	0xcd, 0x26, 0x92, 0x5f, 0xfc, 0xd6, 0xd0, 0xfe, 0xcd, 0x74, 0x77, 0x7d, 0xb8, 0xc7, 0xe7, 0x30,
	0xbe, 0xb7, 0xa8, 0x1a, 0xdc, 0x74, 0xed, 0xc6, 0xff, 0x6c, 0x7a, 0x30, 0xfa, 0x1f, 0x9a, 0xe4,
	0x35, 0xf0, 0x82, 0xe2, 0x67, 0x6b, 0x1e, 0xb7, 0x28, 0x39, 0xe9, 0xdf, 0x9f, 0xae, 0x4e, 0x22,
	0x65, 0xf9, 0xd0, 0xdd, 0xc6, 0xed, 0x57, 0x00, 0x00, 0x00, 0xff, 0xff, 0x2e, 0x92, 0xb3, 0xbb,
	0x2f, 0x02, 0x00, 0x00,
}
